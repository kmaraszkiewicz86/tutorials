//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PersonModel", Namespace="http://schemas.datacontract.org/2004/07/Core.Models")]
    [System.SerializableAttribute()]
    public partial class PersonModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WcfClient.ServiceReference1.GenderType GenderTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WcfClient.ServiceReference1.GenderType GenderType {
            get {
                return this.GenderTypeField;
            }
            set {
                if ((this.GenderTypeField.Equals(value) != true)) {
                    this.GenderTypeField = value;
                    this.RaisePropertyChanged("GenderType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenderType", Namespace="http://schemas.datacontract.org/2004/07/Core.Models.Enums")]
    public enum GenderType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Male = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Female = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IPersonServiceContract")]
    public interface IPersonServiceContract {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonServiceContract/Insert", ReplyAction="http://tempuri.org/IPersonServiceContract/InsertResponse")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        void Insert(WcfClient.ServiceReference1.PersonModel personModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonServiceContract/Insert", ReplyAction="http://tempuri.org/IPersonServiceContract/InsertResponse")]
        System.Threading.Tasks.Task InsertAsync(WcfClient.ServiceReference1.PersonModel personModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonServiceContract/Update", ReplyAction="http://tempuri.org/IPersonServiceContract/UpdateResponse")]
        [System.ServiceModel.TransactionFlowAttribute(System.ServiceModel.TransactionFlowOption.Allowed)]
        void Update(WcfClient.ServiceReference1.PersonModel personModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonServiceContract/Update", ReplyAction="http://tempuri.org/IPersonServiceContract/UpdateResponse")]
        System.Threading.Tasks.Task UpdateAsync(WcfClient.ServiceReference1.PersonModel personModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonServiceContract/GetAll", ReplyAction="http://tempuri.org/IPersonServiceContract/GetAllResponse")]
        WcfClient.ServiceReference1.PersonModel[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPersonServiceContract/GetAll", ReplyAction="http://tempuri.org/IPersonServiceContract/GetAllResponse")]
        System.Threading.Tasks.Task<WcfClient.ServiceReference1.PersonModel[]> GetAllAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPersonServiceContractChannel : WcfClient.ServiceReference1.IPersonServiceContract, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PersonServiceContractClient : System.ServiceModel.ClientBase<WcfClient.ServiceReference1.IPersonServiceContract>, WcfClient.ServiceReference1.IPersonServiceContract {
        
        public PersonServiceContractClient() {
        }
        
        public PersonServiceContractClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PersonServiceContractClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PersonServiceContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PersonServiceContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Insert(WcfClient.ServiceReference1.PersonModel personModel) {
            base.Channel.Insert(personModel);
        }
        
        public System.Threading.Tasks.Task InsertAsync(WcfClient.ServiceReference1.PersonModel personModel) {
            return base.Channel.InsertAsync(personModel);
        }
        
        public void Update(WcfClient.ServiceReference1.PersonModel personModel) {
            base.Channel.Update(personModel);
        }
        
        public System.Threading.Tasks.Task UpdateAsync(WcfClient.ServiceReference1.PersonModel personModel) {
            return base.Channel.UpdateAsync(personModel);
        }
        
        public WcfClient.ServiceReference1.PersonModel[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<WcfClient.ServiceReference1.PersonModel[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
    }
}
